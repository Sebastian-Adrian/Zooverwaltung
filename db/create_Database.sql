-- MySQL Script generated by MySQL Workbench
-- Tue Dec 21 10:41:45 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- 2502 | Sebastian Adrian | Zooverwaltung
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema db_zooverwaltung
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `db_zooverwaltung` ;

-- -----------------------------------------------------
-- Schema db_zooverwaltung
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_zooverwaltung` DEFAULT CHARACTER SET utf8mb4 ;
USE `db_zooverwaltung` ;

-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Unterbringung`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Unterbringung` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Unterbringung` (
  `UnterbringungNr` INT NOT NULL,
  `UnterbringungTyp` ENUM('Gehege', 'Aquarium', 'Terrarium', 'Aquaterrarium', 'Voliere') NULL,
  `Fläche` DOUBLE NULL,
  PRIMARY KEY (`UnterbringungNr`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Terrarium`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Terrarium` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Terrarium` (
  `UnterbringungNr` INT NOT NULL,
  `UVIndex` DOUBLE NULL,
  INDEX `fk_Terrarium_Unterbringung1_idx` (`UnterbringungNr` ASC) VISIBLE,
  PRIMARY KEY (`UnterbringungNr`),
  CONSTRAINT `fk_Terrarium_Unterbringung1`
    FOREIGN KEY (`UnterbringungNr`)
    REFERENCES `db_zooverwaltung`.`Unterbringung` (`UnterbringungNr`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Aquarium`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Aquarium` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Aquarium` (
  `UnterbringungNr` INT NOT NULL,
  `WasserTemperatur` DOUBLE NULL,
  `WasserArt` VARCHAR(45) NULL,
  `WasserMenge` DOUBLE NULL,
  INDEX `fk_Aquarium_Unterbringung1_idx` (`UnterbringungNr` ASC) VISIBLE,
  PRIMARY KEY (`UnterbringungNr`),
  CONSTRAINT `fk_Aquarium_Unterbringung1`
    FOREIGN KEY (`UnterbringungNr`)
    REFERENCES `db_zooverwaltung`.`Unterbringung` (`UnterbringungNr`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Aquaterrarium`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Aquaterrarium` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Aquaterrarium` (
  `UnterbringungNr` INT NOT NULL,
  `AnteilWasser` INT NULL,
  INDEX `fk_Aquaterrarium_Unterbringung1_idx` (`UnterbringungNr` ASC) VISIBLE,
  PRIMARY KEY (`UnterbringungNr`),
  CONSTRAINT `fk_Aquaterrarium_Unterbringung1`
    FOREIGN KEY (`UnterbringungNr`)
    REFERENCES `db_zooverwaltung`.`Unterbringung` (`UnterbringungNr`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Gehege`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Gehege` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Gehege` (
  `UnterbringungNr` INT NOT NULL,
  `EinfriedungHöhe` DOUBLE NULL,
  `SchutzhüttenAnzahl` INT NULL,
  PRIMARY KEY (`UnterbringungNr`),
  INDEX `fk_Gehege_Unterbringung_idx` (`UnterbringungNr` ASC) VISIBLE,
  CONSTRAINT `fk_Gehege_Unterbringung1`
    FOREIGN KEY (`UnterbringungNr`)
    REFERENCES `db_zooverwaltung`.`Unterbringung` (`UnterbringungNr`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Voliere`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Voliere` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Voliere` (
  `UnterbringungNr` INT NOT NULL,
  `FreiflugRaum` DOUBLE NULL,
  INDEX `fk_Voliere_Unterbringung2_idx` (`UnterbringungNr` ASC) VISIBLE,
  PRIMARY KEY (`UnterbringungNr`),
  CONSTRAINT `fk_Voliere_Unterbringung2`
    FOREIGN KEY (`UnterbringungNr`)
    REFERENCES `db_zooverwaltung`.`Unterbringung` (`UnterbringungNr`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Mitarbeiter`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Mitarbeiter` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Mitarbeiter` (
  `MitarbeiterNr` INT NOT NULL,
  `Vorname` VARCHAR(45) NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`MitarbeiterNr`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Pfleger`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Pfleger` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Pfleger` (
  `MitarbeiterNr` INT NOT NULL,
  `WochenStunden` DOUBLE NULL,
  `StundenLohn` DOUBLE NULL,
  PRIMARY KEY (`MitarbeiterNr`),
  CONSTRAINT `fk_Pfleger_Mitarbeiter1`
    FOREIGN KEY (`MitarbeiterNr`)
    REFERENCES `db_zooverwaltung`.`Mitarbeiter` (`MitarbeiterNr`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Tier`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Tier` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Tier` (
  `TierNr` INT NOT NULL,
  `TierTyp` ENUM('Amphibie', 'Fisch', 'Reptil', 'Säugetier', 'Vogel') NULL,
  `TierArt` VARCHAR(45) NULL,
  `Kaufpreis` DOUBLE NULL,
  `KostenTag` DOUBLE NULL,
  `PflegerNr` INT NULL,
  `UnterbringungNr` INT NULL,
  PRIMARY KEY (`TierNr`),
  INDEX `fk_Tier_Pfleger1_idx` (`PflegerNr` ASC) VISIBLE,
  INDEX `fk_Tier_Unterbringung1_idx` (`UnterbringungNr` ASC) VISIBLE,
  CONSTRAINT `fk_Tier_Pfleger1`
    FOREIGN KEY (`PflegerNr`)
    REFERENCES `db_zooverwaltung`.`Pfleger` (`MitarbeiterNr`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tier_Unterbringung1`
    FOREIGN KEY (`UnterbringungNr`)
    REFERENCES `db_zooverwaltung`.`Unterbringung` (`UnterbringungNr`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Amphibie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Amphibie` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Amphibie` (
  `TierNr` INT NOT NULL,
  `LuftFeuchtigkeit` INT NULL,
  `LuftTemperatur` DOUBLE NULL,
  INDEX `fk_Amphibie_Tier1_idx` (`TierNr` ASC) VISIBLE,
  PRIMARY KEY (`TierNr`),
  CONSTRAINT `fk_Amphibie_Tier1`
    FOREIGN KEY (`TierNr`)
    REFERENCES `db_zooverwaltung`.`Tier` (`TierNr`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Fisch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Fisch` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Fisch` (
  `TierNr` INT NOT NULL,
  `phWert` DOUBLE NULL,
  `WasserArt` VARCHAR(45) NULL,
  `WasserTemperatur` DOUBLE NULL,
  INDEX `fk_Fisch_Tier1_idx` (`TierNr` ASC) VISIBLE,
  PRIMARY KEY (`TierNr`),
  CONSTRAINT `fk_Fisch_Tier1`
    FOREIGN KEY (`TierNr`)
    REFERENCES `db_zooverwaltung`.`Tier` (`TierNr`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Reptil`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Reptil` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Reptil` (
  `TierNr` INT NOT NULL,
  `UVIndex` DOUBLE NULL,
  INDEX `fk_Reptil_Tier1_idx` (`TierNr` ASC) INVISIBLE,
  PRIMARY KEY (`TierNr`),
  CONSTRAINT `fk_Reptil_Tier1`
    FOREIGN KEY (`TierNr`)
    REFERENCES `db_zooverwaltung`.`Tier` (`TierNr`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Säugetier`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Säugetier` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Säugetier` (
  `TierNr` INT NOT NULL,
  INDEX `fk_Saeugetier_Tier1_idx` (`TierNr` ASC) VISIBLE,
  PRIMARY KEY (`TierNr`),
  CONSTRAINT `fk_Saeugetier_Tier1`
    FOREIGN KEY (`TierNr`)
    REFERENCES `db_zooverwaltung`.`Tier` (`TierNr`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_zooverwaltung`.`Vogel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_zooverwaltung`.`Vogel` ;

CREATE TABLE IF NOT EXISTS `db_zooverwaltung`.`Vogel` (
  `TierNr` INT NOT NULL,
  `FreiflugRaum` DOUBLE NULL,
  INDEX `fk_Vogel_Tier1_idx` (`TierNr` ASC) VISIBLE,
  PRIMARY KEY (`TierNr`),
  CONSTRAINT `fk_Vogel_Tier1`
    FOREIGN KEY (`TierNr`)
    REFERENCES `db_zooverwaltung`.`Tier` (`TierNr`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

Insert INTO Unterbringung(UnterbringungNr, UnterbringungTyp, Fläche) VALUES (101, 'Gehege', 20.5);
Insert INTO Unterbringung(UnterbringungNr, UnterbringungTyp, Fläche) VALUES (102, 'Voliere', 20.5);
Insert INTO Unterbringung(UnterbringungNr, UnterbringungTyp, Fläche) VALUES (103, 'Terrarium', 20.5);
Insert INTO Unterbringung(UnterbringungNr, UnterbringungTyp, Fläche) VALUES (104, 'Aquarium', 20.5);
Insert INTO Unterbringung(UnterbringungNr, UnterbringungTyp, Fläche) VALUES (105, 'Aquaterrarium', 20.5);

Insert Into Gehege(UnterbringungNr, EinfriedungHöhe, SchutzhüttenAnzahl) VALUES (101, 5.2, 1);
insert into Voliere(UnterbringungNr, FreiflugRaum) 	values (102, 50.3);
insert into Terrarium(UnterbringungNr, UVIndex) VALUES (103, 6.7);
insert into Aquarium(unterbringungNr, WasserTemperatur, WasserArt, WasserMenge) VALUES (104, 18.0, 'Süßwasser', 5000.1);
insert into Aquaterrarium(UnterbringungNr, AnteilWasser) VALUES (105, 20);

Insert Into Tier(TierNr, TierTyp, TierArt, Kaufpreis, KostenTag, PflegerNr, UnterbringungNr) VALUES (501, 'Säugetier', 'Löwe', 5000.0, 120.2, null, 101);
Insert Into Tier(TierNr, TierTyp, TierArt, Kaufpreis, KostenTag, PflegerNr, UnterbringungNr) VALUES (502, 'Vogel', 'Papagei', 230.0, 12.3, null, 102);
Insert Into Tier(TierNr, TierTyp, TierArt, Kaufpreis, KostenTag, PflegerNr, UnterbringungNr) VALUES (503, 'Reptil', 'Königspython', 2300.0, 20.0, null, 103);
Insert Into Tier(TierNr, TierTyp, TierArt, Kaufpreis, KostenTag, PflegerNr, UnterbringungNr) VALUES (504, 'Fisch', 'Piranha', 250, 5.30, null, 104);
Insert Into Tier(TierNr, TierTyp, TierArt, Kaufpreis, KostenTag, PflegerNr, UnterbringungNr) VALUES (505, 'Amphibie', 'Goldkröte', 2500.0, 120.2, null, 105);
Insert Into Tier(TierNr, TierTyp, TierArt, Kaufpreis, KostenTag, PflegerNr, UnterbringungNr) VALUES (508, 'Säugetier', 'Löwe', 4500.0, 120.2, null, 101);
Insert Into Tier(TierNr, TierTyp, TierArt, Kaufpreis, KostenTag, PflegerNr, UnterbringungNr) VALUES (509, 'Säugetier', 'Löwe', 4000.0, 112.2, null, 101);

insert into Säugetier(TierNr) VALUES (501);
insert into Vogel(TierNr, FreiflugRaum) VALUES (502, 24.5);
insert into Reptil(TierNr, UVIndex) VALUES (503, 6.5);
insert into Fisch(TierNr, phWert, WasserArt, WasserTemperatur) VALUES (504, 6.4, 'Süßwasser', 20.1);
insert into Amphibie(TierNr, LuftFeuchtigkeit, LuftTemperatur) VALUES (505, 80, 21.5);
insert into Säugetier(TierNr) VALUES (508);
insert into Säugetier(TierNr) VALUES (509);
